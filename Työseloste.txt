Harjoitustyö: Funktiolaskin
Tekijä: Santeri Kasvi, K8598, TTV16S01
Ohjelmoinnin perusteet - TTZC0200
Aloituspäivämäärä: 26.9.2016
============================
Projektin tavoite on luoda täydellinen, mahdollisesti käyttäjän laajennetta-
vavissa oleva funktiolaskin, jonka toiminta perustuu abstraktiin syntaksi-
puuhun

Abstrakti toiminta (suurimmaksi osaksi minun avuksi)
====================================================
Laskin toimii komentorivillä. Käyttäjä syöttää laskun, jonka laskin kääntää
syntaksipuuksi, joka syötetään tulkkiin, joka laskee laskunlopullisen tuloksen.

Kuvattu toiminta:
Lasku -> Jäsentäjä -> Kääntäjä -> Tulkitsija -> Vastaus

Tuetut operaatiot:
- Lisäys
- Vähennys
- Kertominen
- Jakaminen
- Jakojäännös
- Potenssi

Toiminta vaiheittain
--------------------
Käyttäjä syöttää esimerkkilaskun:
(2 + 1 + 2) * (5 - 12 / 2) + 6

1. Laskun jäsentäminen
----------------------
Lasku syötetään jäsentäjälle (engl. tokeniser, parser), joka käy laskun läpi
merkkijonona, merkki kerrallaan. Se antaa ulos merkkitaulukon (engl.
merkki = token, ei character). Se ei välitä ns. whitespace-merkeistä, eli
tyhjistä merkeistä, kuten välilyönneistä.

Jokaisella merkillä on oma tyyppi (type) ja arvo (value).

Annettu lasku muodostuu seuraavanlaiseksi taulukoksi:

Indeksi |     Tyyppi     |  Arvo
----------------------------------
   0    |   Sulku auki   |   (
   1    |     Numero     |   2
   2    | Aritmeettinen  |   +
   3    |     Numero     |   3
   4    |  Sulku kiinni  |   )
   5    | Aritmeettinen  |   *
   6    |   Sulku auki   |   (
   7    |     Numero     |   5
   8    | Aritmeettinen  |   -
   9    |     Numero     |   12
   10   | Aritmeettinen  |   /
   11   |     Numero     |   2
   12   |  Sulku kiinni  |   )
   13   | Aritmeettinen  |   +
   14   |     Numero     |   6

Tunnetut merkit:
- Numero
- Aritmeettinen
- Sulku auki
- Sulku kiinni
- Nimi
   
(aritmeettinen = arithmetic)
   
2. Puun kääntäminen
-------------------
Kääntäjä muodostaa jäsennetyistä merkeistä seuraavanlaisen syntaksipuun:

Taso | Puu
----------
  0  | Yhteen
     | |     \
     | |      \
     | |       \
  1  | Kerto    6
     | |    \
     | |     \----\
     | |           \
  2  | Yhteen       Vähennys
     | |     \      |      |
     | |      \     |      |
     | |       \    |      |
  3  | Yhteen   2   5      Jako
     | |    |              |  |
  4  | 2    1              12 2

- Elementtejä on kahdenalaisia: operaatioita ja numeroita.
- Numeroilla ei voi olla lapsielementtejä.
- Operaatioilla on aina kaksi lapsielementtiä.
- Tasot ovat ensin lajiteltu niiden elementtien prioriteetin mukaisesti;
  saman prioriteetin omaavat ovat puussa niiden esiintymisen laskussa mukaisesti.
- Suurimman tason omaavilla elementeillä on suurin prioriteetti laskujärjestyk-
  sessä.
- Tasoilla on aina parillinen määrä elementtejä, paitsi juuritasolla.
- Viimeinen taso sisältää vain numeroelementtejä.
- Sulut (eli ryhmät) näkyvät taulukossa elementtien sijaintina.
- Vakiomuuttujat (esim. pi) muutetaan numeroelementeiksi

3. Puun tulkitseminen
---------------------
Vastauksen laskeminen on yksinkertaisesti ylimmän elementin arvon laskeminen.
Yksittäisen elementin arvo lasketaan suorittamalla elementin operaatio sen
kahden lapsielementtien arvoilla. Koska elementin arvon laskeminen aiheut-
taa sen lapsielementin arvon laskemisen, koko puu voidaan käydä rekursiivisesti
läpi.


Toiminnat priorisoituna
=======================
1.                Laskeminen | toteutetaan
2.         Laskujen tulosten |
      varastointi tiedostoon | toteutetaan
3.            Vakiomuuttujat | toteutetaan
4.             Vakiofunktiot | toteutetaan
5.1 Käyttäjän omat muuttujat | toteutetaan
5.2          Käyttäjän omien |
      muuttujien varastointi |
                  tiedostoon | toteutetaan
6.1  Käyttäjän omat funktiot | mahdollisesti toteutetaan
6.2          Käyttäjän omien |
     funktioiden varastointi |
                  tiedostoon | mahdollisesti toteutetaan
7          "Lazy evaluation" | tuskin toteutetaan
                  
Versiohistoria
==============
0.1
    Perustoiminta; laskujen laskeminen

    
Käytetty aika
=============

  Pvm  | Aika
-------------
  4.10 | 1h
  5.10 | 1h
  6.10 | 4.5h
  7.10 | 2h
 11.10 | 1h